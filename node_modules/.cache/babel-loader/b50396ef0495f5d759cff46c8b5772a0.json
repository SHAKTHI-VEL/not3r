{"ast":null,"code":"var _jsxFileName = \"/home/shakthivel/Desktop/inotebook/my-app/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial); // Get all Notes\n\n  const getNotes = async () => {\n    // API Call \n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  }; // Add a Note\n\n\n  const addNote = async (title, description, tag) => {\n    // TODO: API Call\n    // API Call \n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  }; // Delete a Note\n\n\n  const deleteNote = async id => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      }\n    });\n    const json = response.json();\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; // Edit a Note\n\n\n  const editNote = async (id, title, description, tag) => {\n    // API Call \n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    let newNotes = JSON.parse(JSON.stringify(notes)); // Logic to edit in client\n\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","NoteState","props","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","children"],"sources":["/home/shakthivel/Desktop/inotebook/my-app/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState = (props) => {\n  const host = \"http://localhost:5000\"\n  const notesInitial = []\n  const [notes, setNotes] = useState(notesInitial)\n\n  // Get all Notes\n  const getNotes = async () => {\n    // API Call \n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      }\n    });\n    const json = await response.json() \n    setNotes(json)\n  }\n\n  // Add a Note\n  const addNote = async (title, description, tag) => {\n    // TODO: API Call\n    // API Call \n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      },\n      body: JSON.stringify({title, description, tag})\n    });\n\n    const note = await response.json();\n    setNotes(notes.concat(note))\n  }\n\n  // Delete a Note\n  const deleteNote = async (id) => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      }\n    });\n    const json = response.json(); \n    const newNotes = notes.filter((note) => { return note._id !== id })\n    setNotes(newNotes)\n  }\n\n  // Edit a Note\n  const editNote = async (id, title, description, tag) => {\n    // API Call \n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjEzMWRjNWUzZTQwMzdjZDQ3MzRhMDY2In0sImlhdCI6MTYzMDY2OTU5Nn0.hJS0hx6I7ROugkqjL2CjrJuefA3pJi-IU5yGUbRHI4Q\"\n      },\n      body: JSON.stringify({title, description, tag})\n    });\n    const json = await response.json(); \n\n     let newNotes = JSON.parse(JSON.stringify(notes))\n    // Logic to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag; \n        break; \n      }\n    }  \n    setNotes(newNotes);\n  }\n\n  return (\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\n      {props.children}\n    </NoteContext.Provider>\n  )\n\n}\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module"}